# This test runs only when triggered manually or
# when the commit message on push is 'test download data'.
# As this test triggers the database in real, we don't
# want to run the test with every push.
name: Test download data

on:
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # This means At 03:00 on Wednesday.
    # see https://crontab.guru/#0_0_*_*_3
    - cron:  '0 3 * * 3'
  push:

jobs:
  tests:
      if: contains(github.event.head_commit.message, 'test download data')
      strategy:
        fail-fast: false
        matrix:
          os: [ "ubuntu-latest" ]
          # Test against all security and bugfix versions: https://devguide.python.org/versions/
          python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
      runs-on: "${{ matrix.os }}"
      defaults:
        run:
          # This might be needed for Windows
          # and doesn't seem to affect unix-based systems so we include it.
          # If you have better proof of whether this is needed or not,
          # feel free to update.
          shell: bash
      steps:
        - name: Check out repository
          uses: actions/checkout@v4
        - uses: ./.github/actions/setup
          with:
            python-version: ${{ matrix.python-version }}
            # When running the tests, install with all optional dependencies
            # to get maximum test coverage.
            # If we find that we're getting failures
            # when people try to run without installing optional dependencies,
            # we should add a CI step that runs the tests without optional dependencies too.
            # We don't have that right now, because we're not sure this pain point exists.
            uv-dependency-install-flags: "--all-extras --group tests"
        - name: Run download tests
          env:
            ECMWF_DATASTORES_URL: ${{ secrets.ECMWF_DATASTORES_URL }}
            ECMWF_DATASTORES_KEY: ${{ secrets.ECMWF_DATASTORES_KEY }}
          run: |
            echo -e "url: $ECMWF_DATASTORES_URL\nkey: $ECMWF_DATASTORES_KEY" > "$HOME/.ecmwfdatastoresrc"
            uv run pytest -r a -v src test_download_data --doctest-modules --doctest-report ndiff --cov=src --cov-report=term-missing --cov-report=xml
            uv run coverage report
        - name: Upload coverage reports to Codecov with GitHub Action
          uses: codecov/codecov-action@v4.2.0
          env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
